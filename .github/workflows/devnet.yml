name: Helix Devnet CD

on:
  push:
    branches:
      - dev

jobs:
  devnet:
    if: false
    name: 'Deploy to devnet'
    runs-on: ubuntu-latest
    env:
      SSH_USER: ${{ secrets.DEVNET_SSH_USER }}
      SSH_KEY: ${{ secrets.DEVNET_SSH_KEY }}
      SSH_HOST: ${{ secrets.DEVNET_SSH_HOST }}
      SOURCE_DIR: ${{ secrets.DEVNET_SOURCE_PATH}}
      GIT_BRANCH: ${{secrets.DEVNET_GIT_BRANCH}}

      ## Flags
      MAINTENANCE_ENABLED: false
      GAS_FREE_DEPOSIT_REBATE_ENABLED: false
      META_TAGS_ENABLED: true
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      METRICS_ENABLED: false
      GEO_IP_RESTRICTIONS_ENABLED: false
      SHOW_AUCTION_COUNTDOWN: false
      REFERRALS_ENABLED: false

      ## Endpoints
      APP_EXCHANGE_API_ENDPOINT: ''
      APP_SENTRY_GRPC_ENDPOINT: ''
      APP_SENTRY_HTTP_ENDPOINT: ''

      ## Secret
      APP_NEWSLETTER_API: ${{ secrets.APP_NEWSLETTER_API }}
      APP_FEE_RECIPIENT: ${{ secrets.APP_FEE_RECIPIENT }}
      APP_ALCHEMY_GOERLI_KEY: ${{ secrets.APP_ALCHEMY_GOERLI_KEY }}
      APP_GOOGLE_ANALYTICS_KEY: ${{ secrets.APP_DEVNET_GOOGLE_ANALYTICS_KEY }}
      APP_AMPLITUDE_KEY: ${{secrets.APP_DEVNET_AMPLITUDE_KEY}}
      APP_NINJA_PASS_ENDPOINT: ${{ secrets.APP_NINJA_PASS_ENDPOINT }}

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/devnet.key
          chmod 600 ~/.ssh/devnet.key
          cat >>~/.ssh/config <<END
          Host devnet
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/devnet.key
            StrictHostKeyChecking no
            SendEnv $SOURCE_DIR
          END

      - name: Check out the source
        run: ssh devnet 'cd "'$SOURCE_DIR'" && git fetch && git reset --hard "'$GIT_BRANCH'" && git pull'

      - name: Install Dependencies
        run: ssh devnet 'source $HOME/.nvm/nvm.sh && cd "'$SOURCE_DIR'" && yarn install'

      - name: Remove prev build
        run: ssh devnet 'cd "'$SOURCE_DIR'"  && rm -rf dist'

      - name: Remove prev build process
        run: ssh devnet 'cd "'$SOURCE_DIR'"  && rm -rf ./node_modules/.cache'

      - name: Building the project
        run: ssh devnet 'source $HOME/.nvm/nvm.sh && cd "'$SOURCE_DIR'" && yarn build'

      - name: Generating the static pages
        run: ssh devnet 'source $HOME/.nvm/nvm.sh && cd "'$SOURCE_DIR'" && yarn generate'
